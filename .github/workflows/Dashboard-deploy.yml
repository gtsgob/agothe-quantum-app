name: Deploy dashboard to gh-pages

# Deploys /dashboard/ to the gh-pages branch so GitHub Pages can serve it
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch and deploy dashboard
        env:
          REPO: ${{ github.repository }}
          SOURCE_DIR: dashboard
        run: |
          set -e

          cd "$GITHUB_WORKSPACE"

          # Verify dashboard exists
          if [ ! -d "$SOURCE_DIR" ]; then
            echo "‚ùå Directory '$SOURCE_DIR' not found in repo. Aborting."
            exit 1
          fi

          # Fetch existing gh-pages if it exists
          git fetch origin gh-pages || true

          # Switch to gh-pages branch, create if missing
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git switch gh-pages
          else
            git switch --orphan gh-pages
            git rm -rf . || true
          fi

          # Clean branch workspace
          git rm -rf . || true

          # Use temporary staging folder to avoid copying onto itself
          mkdir -p _staging
          cp -a "$GITHUB_WORKSPACE/$SOURCE_DIR/." "_staging/"

          # Move staged dashboard into gh-pages/dashboard
          mkdir -p dashboard
          cp -a _staging/. dashboard/
          rm -rf _staging

          # Commit and push
          git add -A
          if git diff --cached --quiet; then
            echo "‚öôÔ∏è No changes to deploy."
          else
            git commit -m "üöÄ Deploy dashboard to gh-pages (from $GITHUB_REF)"
            git push origin gh-pages --force --quiet
            echo "‚úÖ Deployment complete!"
          fi

      - name: Post deployment summary
        if: always()
        run: |
          echo "üåê Dashboard live at:"
          echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/dashboard/"
